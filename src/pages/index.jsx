import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import DropZone from "../components/DropZone"
import React, { useState } from 'react'
import sleep from "../utils/sleep"

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

	const [loading, setLoading] = useState(false);
	const [imgURL, setImgURL] = useState(null);
	const [spotyData, setSpotyData] = useState(null);

	const handleDiscover = async () => {
		if(!imgURL) {
			alert("Please upload a video");
			return;
		}

		setLoading(true);
		// call the API
		const response = await fetch('/api/discover', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
			body: JSON.stringify({ url: imgURL })
		});
		const data = await response.json();
		setSpotyData(data);

		setLoading(false);

		console.log('data: ', data);

	}


	const handleImgChange = async (newImg) => {
		const urlImg = URL.createObjectURL(newImg);
    setImgURL(urlImg);
  };

	const handleInputChange = (e) => {
		const url = e.target.value;
		setImgURL(url);
	}

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
				<div className={styles.inputContainer}>
					<DropZone handleImgChange={handleImgChange} loading={loading} setLoading={setLoading} imgURL={imgURL}/>
					<label htmlFor="text-input" className={styles.labelUrl}>or put the Url:</label>
					<input type="text" id="text-input" handleInputChange={handleInputChange} className={styles.textInput} placeholder="https://images.unsplash.com/photo-1679948205100-b4a9270b23ec?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3087&q=80" />
				</div>
				<button onClick={handleDiscover}>Discover</button>
				{spotyData && (
					<div>
						<p>{spotyData.title}</p>
						<p>{spotyData.spotyUrl}</p>
						<p>{spotyData.description}</p>
					</div>
				)}
				<div>

				</div>
      </main>
    </>
  )
}
